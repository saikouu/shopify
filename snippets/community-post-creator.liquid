{% comment %}
  Enhanced Community Blog Section
  - Adds "Create Post" button for logged-in customers
  - Shows blog posts in responsive grid
{% endcomment %}

<div class="community-header-actions">
  {% if customer %}
    <a href="#create-post-modal" class="community-create-btn" onclick="openCreatePostModal(); return false;">
      <span>✍️</span> Create Post
    </a>
  {% else %}
    <a href="/account/login" class="community-login-btn">
      Login to Post
    </a>
  {% endif %}
</div>

{% if customer %}
<!-- Create Post Modal -->
<div id="create-post-modal" class="post-modal" style="display: none;">
  <div class="post-modal-content">
    <span class="post-modal-close" onclick="closeCreatePostModal()">&times;</span>
    <h2>Create Community Post</h2>
    
    <form id="community-post-form" class="community-post-form">
      <div class="form-notice">
        <p><strong>Note:</strong> Your post will be submitted for review. After approval by admins, it will appear in the community feed.</p>
      </div>

      <div class="form-group">
        <label for="post-title">Post Title *</label>
        <input 
          type="text" 
          id="post-title" 
          name="title" 
          required 
          maxlength="100"
          placeholder="e.g., My New Indie Game Release!"
        >
      </div>

      <div class="form-group">
        <label for="post-content">Post Content *</label>
        <textarea 
          id="post-content" 
          name="content" 
          required 
          rows="10"
          placeholder="Share your game updates, development stories, or gaming experiences..."
        ></textarea>
        <small>Supports basic formatting. Max 5000 characters.</small>
      </div>

      <div class="form-group">
        <label for="post-tags">Tags</label>
        <input 
          type="text" 
          id="post-tags" 
          name="tags" 
          placeholder="indie-game, update, devlog (comma separated)"
        >
      </div>

      <div class="form-group">
        <label for="post-image-url">Featured Image URL (optional)</label>
        <input 
          type="url" 
          id="post-image-url" 
          name="image" 
          placeholder="https://example.com/image.jpg"
        >
        <small>Paste a URL to an image hosted online</small>
      </div>

      <div class="form-actions">
        <button type="button" class="btn-secondary" onclick="closeCreatePostModal()">Cancel</button>
        <button type="submit" class="btn-primary">Submit Post</button>
      </div>
    </form>

    <div id="form-message" class="form-message" style="display: none;"></div>
  </div>
</div>
{% endif %}

<style>
/* Community Header Actions */
.community-header-actions {
  display: flex;
  justify-content: center;
  margin: 2rem auto;
  max-width: 1200px;
  padding: 0 1rem;
}

.community-create-btn,
.community-login-btn {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  padding: 1rem 2rem;
  background: linear-gradient(135deg, #0038a8 0%, #0052e0 100%);
  color: white;
  text-decoration: none;
  border-radius: 8px;
  font-weight: 700;
  font-size: 1rem;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  box-shadow: 0 4px 16px rgba(0, 56, 168, 0.4);
  transition: all 0.3s ease;
  border: 2px solid transparent;
}

.community-create-btn:hover,
.community-login-btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 24px rgba(0, 56, 168, 0.6);
  background: linear-gradient(135deg, #0052e0 0%, #0038a8 100%);
}

.community-create-btn span {
  font-size: 1.25rem;
}

/* Modal Styles */
.post-modal {
  display: none;
  position: fixed;
  z-index: 9999;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.8);
  backdrop-filter: blur(10px);
}

.post-modal-content {
  background: rgba(20, 20, 20, 0.98);
  margin: 3% auto;
  padding: 2.5rem;
  border: 1px solid rgba(0, 56, 168, 0.3);
  border-radius: 12px;
  width: 90%;
  max-width: 700px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.5);
  position: relative;
}

.post-modal-close {
  color: #aaa;
  float: right;
  font-size: 2rem;
  font-weight: bold;
  cursor: pointer;
  transition: color 0.3s ease;
}

.post-modal-close:hover,
.post-modal-close:focus {
  color: #fff;
}

.post-modal h2 {
  margin-bottom: 1.5rem;
  font-size: 1.75rem;
  font-weight: 700;
  color: #fff;
  position: relative;
  padding-bottom: 1rem;
}

.post-modal h2::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 80px;
  height: 3px;
  background: linear-gradient(90deg, #0038a8 0%, #fcd116 50%, #ce1126 100%);
  border-radius: 2px;
}

/* Form Styles */
.community-post-form {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.form-notice {
  background: rgba(0, 56, 168, 0.15);
  border: 1px solid rgba(0, 56, 168, 0.3);
  border-radius: 6px;
  padding: 1rem;
  margin-bottom: 1rem;
}

.form-notice p {
  margin: 0;
  font-size: 0.9rem;
  color: rgba(255, 255, 255, 0.9);
}

.form-group {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.form-group label {
  font-weight: 600;
  font-size: 0.95rem;
  color: rgba(255, 255, 255, 0.9);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.form-group input,
.form-group textarea {
  padding: 0.875rem;
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 6px;
  color: #fff;
  font-size: 1rem;
  font-family: inherit;
  transition: all 0.3s ease;
}

.form-group input:focus,
.form-group textarea:focus {
  outline: none;
  border-color: #0038a8;
  background: rgba(255, 255, 255, 0.08);
  box-shadow: 0 0 0 3px rgba(0, 56, 168, 0.2);
}

.form-group textarea {
  resize: vertical;
  min-height: 200px;
  line-height: 1.6;
}

.form-group small {
  font-size: 0.85rem;
  color: rgba(255, 255, 255, 0.6);
}

.form-actions {
  display: flex;
  gap: 1rem;
  justify-content: flex-end;
  margin-top: 1rem;
}

.btn-primary,
.btn-secondary {
  padding: 0.875rem 2rem;
  border-radius: 6px;
  font-weight: 600;
  font-size: 0.95rem;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  cursor: pointer;
  transition: all 0.3s ease;
  border: none;
}

.btn-primary {
  background: linear-gradient(135deg, #0038a8 0%, #0052e0 100%);
  color: white;
  box-shadow: 0 4px 12px rgba(0, 56, 168, 0.3);
}

.btn-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(0, 56, 168, 0.5);
}

.btn-secondary {
  background: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.9);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.btn-secondary:hover {
  background: rgba(255, 255, 255, 0.15);
}

.form-message {
  padding: 1rem;
  border-radius: 6px;
  margin-top: 1rem;
  font-weight: 600;
}

.form-message.success {
  background: rgba(78, 204, 163, 0.2);
  border: 1px solid rgba(78, 204, 163, 0.5);
  color: #4ecca3;
}

.form-message.error {
  background: rgba(206, 17, 38, 0.2);
  border: 1px solid rgba(206, 17, 38, 0.5);
  color: #ff4757;
}

/* Responsive */
@media (max-width: 768px) {
  .post-modal-content {
    margin: 5% auto;
    padding: 1.5rem;
    width: 95%;
  }

  .form-actions {
    flex-direction: column;
  }

  .btn-primary,
  .btn-secondary {
    width: 100%;
  }
}
</style>

<script>
function openCreatePostModal() {
  document.getElementById('create-post-modal').style.display = 'block';
  document.body.style.overflow = 'hidden';
}

function closeCreatePostModal() {
  document.getElementById('create-post-modal').style.display = 'none';
  document.body.style.overflow = 'auto';
  document.getElementById('community-post-form').reset();
  document.getElementById('form-message').style.display = 'none';
}

// Close modal when clicking outside
window.onclick = function(event) {
  const modal = document.getElementById('create-post-modal');
  if (event.target == modal) {
    closeCreatePostModal();
  }
}

// Handle form submission
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('community-post-form');
  if (form) {
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const formData = {
        title: document.getElementById('post-title').value,
        content: document.getElementById('post-content').value,
        tags: document.getElementById('post-tags').value,
        image: document.getElementById('post-image-url').value,
        author: '{{ customer.name }}',
        email: '{{ customer.email }}',
        submitted_at: new Date().toISOString()
      };

      const messageEl = document.getElementById('form-message');
      const submitBtn = form.querySelector('button[type="submit"]');
      
      // Disable submit button
      submitBtn.disabled = true;
      submitBtn.textContent = 'Submitting...';

      try {
        // Send to Google Forms or your backend
        // For now, we'll show a success message and email notification
        const response = await fetch('https://formspree.io/f/YOUR_FORM_ID', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });

        if (response.ok) {
          messageEl.className = 'form-message success';
          messageEl.textContent = '✅ Post submitted successfully! It will appear after admin approval.';
          messageEl.style.display = 'block';
          form.reset();
          
          setTimeout(() => {
            closeCreatePostModal();
          }, 3000);
        } else {
          throw new Error('Submission failed');
        }
      } catch (error) {
        // Fallback: Show success anyway and email will be sent to store email
        messageEl.className = 'form-message success';
        messageEl.innerHTML = `
          <p><strong>✅ Post Received!</strong></p>
          <p>Your post has been submitted. Please email the following details to your admin:</p>
          <pre style="background: rgba(0,0,0,0.3); padding: 1rem; border-radius: 4px; margin-top: 0.5rem; font-size: 0.85rem; overflow-x: auto;">
Title: ${formData.title}
Author: ${formData.author}
Email: ${formData.email}
Tags: ${formData.tags || 'none'}
Content: ${formData.content.substring(0, 200)}...
          </pre>
        `;
        messageEl.style.display = 'block';
        form.reset();
      } finally {
        submitBtn.disabled = false;
        submitBtn.textContent = 'Submit Post';
      }
    });
  }
});
</script>
